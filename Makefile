DESTDIR =
bindir = $(DESTDIR)/usr/sbin
etcdir = $(DESTDIR)/etc/l2tpns
libdir = $(DESTDIR)/usr/lib/l2tpns

CC = gcc
DEFINES = -DBGP -DRINGBUFFER -DSTAT_CALLS -DSTATISTICS -D_GNU_SOURCE
OPTIM = -g -O3 -funroll-loops -fomit-frame-pointer -finline-functions
CFLAGS = -Wall $(OPTIM) $(DEFINES)
LDFLAGS = -rdynamic
LIBS = -lm
INSTALL = /usr/bin/install -c

OBJS=	md5.o \
	icmp.o \
	cli.o \
	l2tpns.o \
	ppp.o \
	radius.o \
	ll.o \
	cluster.o \
	arp.o \
	constants.o \
	ll.o \
	control.o \
	util.o \
	tbf.o \
	bgp.o \

PLUGINS=garden.so autothrottle.so autosnoop.so stripdomain.so
TARGETS=l2tpns nsctl generateload bounce $(PLUGINS)

all:	$(TARGETS)

clean:
	/bin/rm -f *.o *.so $(TARGETS)

depend:
	(sed -n 'p; /^## Dependencies: (autogenerated) ##/q' Makefile && \
	    gcc -MM $(DEFINES) $(OBJS:.o=.c) && \
	    gcc -MM $(DEFINES) $(PLUGINS:.so=.c) | sed 's/\.o/.so/') >Makefile.tmp
	mv Makefile Makefile.bak
	mv Makefile.tmp Makefile

# install config files only if a startup-config does not exist yet JK 20040713
#  this does not interfere when building rpms or debs and makes
#  fast upgrading via make install possible

install: all
	$(INSTALL) -D -o root -g root -m 0755 l2tpns $(bindir)/l2tpns
	$(INSTALL) -D -o root -g root -m 0755 nsctl $(bindir)/nsctl
	@if [ -f $(etcdir)/startup-config ]; then \
		echo '***' Installing default config files in $(etcdir) as .defaults; \
		$(INSTALL) -D -o root -g root -m 0600 etc/startup-config.default $(etcdir)/startup-config.default; \
		$(INSTALL) -D -o root -g root -m 0644 etc/ip_pool.default $(etcdir)/ip_pool.default; \
		$(INSTALL) -D -o root -g root -m 0600 etc/users.default $(etcdir)/users.default; \
	else    \
		echo '***' Installing default config files in $(etcdir) - remember to adjust them; \
		$(INSTALL) -D -o root -g root -m 0600 etc/startup-config.default $(etcdir)/startup-config;      \
		$(INSTALL) -D -o root -g root -m 0644 etc/ip_pool.default $(etcdir)/ip_pool;     \
		$(INSTALL) -D -o root -g root -m 0600 etc/users.default $(etcdir)/users; \
	fi

	for plugin in $(PLUGINS); do \
		$(INSTALL) -D -o root -g root -m 0755 $$plugin $(libdir)/$$plugin; \
	done
	if [ ! -e /dev/net/tun ]; then \
		mkdir /dev/net; \
		mknod /dev/net/tun c 10 200; \
	fi

l2tpns:	$(OBJS)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS) -lcli -ldl

nsctl:	nsctl.o control.o
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)

generateload:	test/generateload.o
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)

bounce:	test/bounce.o
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS) $(LIBS)

%.o: %.c
	$(CC) -c $(CFLAGS) -o $@ $<

%.so: %.c
	$(CC) -fPIC -shared $(CFLAGS) -o $@ $< $(LDFLAGS) $(LIBS)

.PHONY: all clean depend

## Dependencies: (autogenerated) ##
md5.o: md5.c md5.h
icmp.o: icmp.c l2tpns.h config.h
cli.o: cli.c l2tpns.h config.h util.h cluster.h tbf.h ll.h bgp.h
l2tpns.o: l2tpns.c md5.h l2tpns.h config.h cluster.h plugin.h ll.h \
  constants.h control.h util.h tbf.h bgp.h
ppp.o: ppp.c l2tpns.h config.h constants.h plugin.h util.h tbf.h \
  cluster.h
radius.o: radius.c md5.h constants.h l2tpns.h config.h plugin.h util.h
ll.o: ll.c ll.h
cluster.o: cluster.c l2tpns.h config.h cluster.h util.h tbf.h bgp.h
arp.o: arp.c l2tpns.h config.h
constants.o: constants.c constants.h
ll.o: ll.c ll.h
control.o: control.c control.h
util.o: util.c l2tpns.h config.h
tbf.o: tbf.c l2tpns.h config.h util.h tbf.h
bgp.o: bgp.c l2tpns.h config.h bgp.h util.h
garden.so: garden.c l2tpns.h config.h plugin.h control.h
autothrottle.so: autothrottle.c l2tpns.h config.h plugin.h control.h
autosnoop.so: autosnoop.c l2tpns.h config.h plugin.h control.h
